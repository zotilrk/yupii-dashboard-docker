name: Deploy to Self-Hosted EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Stop existing containers
      run: |
        # Stop docker-compose services
        sudo docker-compose down || true
        
        # Stop any containers using our ports
        sudo docker stop $(sudo docker ps -q --filter "publish=8501") || true
        sudo docker stop $(sudo docker ps -q --filter "publish=8502") || true
        
        # Remove specific containers if they exist
        sudo docker stop yupii-dashboard-app yupii-dashboard-global || true
        sudo docker rm yupii-dashboard-app yupii-dashboard-global || true
        
        # Remove any containers from this project
        sudo docker rm -f $(sudo docker ps -aq --filter "name=yupii-dashboard") || true
        
        # Clean up any dangling containers
        sudo docker container prune -f || true
        
    - name: Build and start services
      run: |
        # Copy environment variables
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
        echo "AWS_DEFAULT_REGION=us-west-1" >> .env
        echo "S3_BUCKET_NAME=xideralaws-curso-carlos" >> .env
        
        # Build and start with docker-compose
        sudo docker-compose up -d --build
        
    - name: Verify deployment
      run: |
        sleep 10
        sudo docker-compose ps
        curl -f http://localhost:8501 || echo "Dashboard not ready yet"
        
    - name: Show public URLs
      run: |
        PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
        echo "ðŸŽ‰ Deployment completed!"
        echo "ðŸŽ¯ Yupii Dashboard Hub: http://$PUBLIC_IP:8501"
